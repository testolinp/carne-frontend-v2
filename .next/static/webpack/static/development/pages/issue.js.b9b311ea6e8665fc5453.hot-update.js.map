{"version":3,"file":"static/webpack/static/development/pages/issue.js.b9b311ea6e8665fc5453.hot-update.js","sources":["webpack:///./node_modules/node-fetch/browser.js","webpack:///./pages/issue.js"],"sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = global.fetch.bind(global);\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import React from 'react'\nimport fetch from 'node-fetch'\n\nimport Global from '../components/Global'\nimport Layout from '../components/Layout'\nimport HerospaceIssue from '../components/issue/Herospace'\nimport Playlist from '../components/home/Playlist'\nimport IssueDetail from '../components/issue/Artist'\n\nfunction Issue() {\n  return (\n    <>\n      <Layout title=\"CarnemagÂ® | Issues\">\n        {/* { currentIssue &&\n          <HerospaceIssue key=\"1\" issue={ currentIssue } currentYear={ Global.getCurrentYear() } />\n        }\n\n        { issuePlaylist && \n          <Playlist issuePlaylist={ issuePlaylist } currentYear={ Global.getCurrentYear() } />\n        } */}\n\n        {/* { fullArtist &&\n          fullArtist.map((artist, index) => (\n            <IssueDetail key={ index } model={ artist } currentYear={ Global.getCurrentYear() } />\n          ))\n        } */}\n      </Layout>\n    </>\n  )\n}\n\nexport async function getServerSideProps({ query }) {\n  // const res = await fetch(`http://admin.carnemag.co:1337/issues?Number=${query.Number}`)\n  // const currentIssue = await res.json()\n\n  // const issuePlaylist = await fetch(`http://admin.carnemag.co:1337/playlists?issue=${query.Number}`)\n  //   .then(res => res.json())\n\n  // return {\n  //   props : {\n  //     currentIssue: currentIssue[0],\n  //     issuePlaylist: issuePlaylist[0]\n  //   }\n  // }\n}\n\nexport default Issue"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;;AAgBA;;;;A","sourceRoot":""}